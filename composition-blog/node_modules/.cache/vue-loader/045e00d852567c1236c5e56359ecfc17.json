{"remainingRequest":"C:\\Users\\Manager 1\\Documents\\GitHub\\Vue-tutorials\\composition-blog\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Manager 1\\Documents\\GitHub\\Vue-tutorials\\composition-blog\\src\\views\\Create.vue?vue&type=template&id=6ee6d5b6","dependencies":[{"path":"C:\\Users\\Manager 1\\Documents\\GitHub\\Vue-tutorials\\composition-blog\\src\\views\\Create.vue","mtime":1660115748848},{"path":"C:\\Users\\Manager 1\\Documents\\GitHub\\Vue-tutorials\\composition-blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1659265155212},{"path":"C:\\Users\\Manager 1\\Documents\\GitHub\\Vue-tutorials\\composition-blog\\node_modules\\babel-loader\\lib\\index.js","mtime":1659265191116},{"path":"C:\\Users\\Manager 1\\Documents\\GitHub\\Vue-tutorials\\composition-blog\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1659265227239},{"path":"C:\\Users\\Manager 1\\Documents\\GitHub\\Vue-tutorials\\composition-blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1659265155212},{"path":"C:\\Users\\Manager 1\\Documents\\GitHub\\Vue-tutorials\\composition-blog\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1659265195786}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgPGRpdiBjbGFzcz0iY3JlYXRlIj4NCiAgICAgICAgPGZvcm0gQHN1Ym1pdC5wcmV2ZW50PSJoYW5kbGVTdWJtaXQiPg0KICAgICAgICAgICAgPGxhYmVsPlRpdGxlPC9sYWJlbD4NCiAgICAgICAgICAgIDxpbnB1dCB2LW1vZGVsPSJ0aXRsZSIgdHlwZT0idGV4dCIgcmVxdWlyZWQgLz4NCiAgICAgICAgICAgIDxsYWJlbD5Db250ZW50OjwvbGFiZWw+DQogICAgICAgICAgICA8dGV4dGFyZWEgdi1tb2RlbD0iYm9keSIgcmVxdWlyZWQ+PC90ZXh0YXJlYT4NCiAgICAgICAgICAgIDxsYWJlbD5UYWdzOihoaXQgZW50ZXIgdG8gYWRkIGEgdGFnKTwvbGFiZWw+DQogICAgICAgICAgICA8aW5wdXQgdi1tb2RlbD0idGFnIiB0eXBlPSJ0ZXh0IiBAa2V5ZG93bi5lbnRlci5wcmV2ZW50PSJoYW5kbGVLZXlEb3duIiAvPg0KICAgICAgICAgICAgPGRpdiB2LWZvcj0idGFnIGluIHRhZ3MiIDprZXk9InRhZyIgY2xhc3M9InBpbGwiPiN7eyB0YWcgfX08L2Rpdj4NCiAgICAgICAgICAgIDxidXR0b24+QWRkIFBvc3Q8L2J1dHRvbj4NCg0KICAgICAgICA8L2Zvcm0+DQogICAgPC9kaXY+DQo="},{"version":3,"sources":["C:\\Users\\Manager 1\\Documents\\GitHub\\Vue-tutorials\\composition-blog\\src\\views\\Create.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACf,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACzE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAE5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACV,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/Manager 1/Documents/GitHub/Vue-tutorials/composition-blog/src/views/Create.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div class=\"create\">\r\n        <form @submit.prevent=\"handleSubmit\">\r\n            <label>Title</label>\r\n            <input v-model=\"title\" type=\"text\" required />\r\n            <label>Content:</label>\r\n            <textarea v-model=\"body\" required></textarea>\r\n            <label>Tags:(hit enter to add a tag)</label>\r\n            <input v-model=\"tag\" type=\"text\" @keydown.enter.prevent=\"handleKeyDown\" />\r\n            <div v-for=\"tag in tags\" :key=\"tag\" class=\"pill\">#{{ tag }}</div>\r\n            <button>Add Post</button>\r\n\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { projectFirestore, timeStamp } from '../firebase/config'\r\n\r\nexport default {\r\n    setup() {\r\n        const title = ref('')\r\n        const body = ref('')\r\n        const tag = ref('')\r\n        const tags = ref([])\r\n        const router = useRouter()\r\n        const handleSubmit = async () => {\r\n            const post = {\r\n                title: title.value,\r\n                body: body.value,\r\n                tags: tags.value,\r\n                createdAt: timeStamp()\r\n            }\r\n\r\n            // const response = await fetch('http://localhost:3000/posts', {\r\n            //     method: 'POST',\r\n            //     headers: { 'Content-Type': 'application/json' },\r\n            //     body: JSON.stringify(post)\r\n            // })\r\n            const res = await projectFirestore.collection(\"posts\").add(post)\r\n            // if (!response.ok) {\r\n            //     const message = `An error has occured: ${response.status}`;\r\n            //     throw new Error(message);\r\n            // }\r\n            router.push({ name: 'Home' })\r\n        }\r\n        const handleKeyDown = () => {\r\n            if (!tags.value.includes(tag.value)) {\r\n                tag.value = tag.value.replace(/\\s/, '') // removes white space\r\n                tags.value.push(tag.value)\r\n\r\n            }\r\n            tag.value = ''\r\n\r\n        }\r\n        return { title, body, tag, tags, handleKeyDown, handleSubmit }\r\n    }\r\n\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\nform {\r\n    max-width: 480px;\r\n    margin: 0 auto;\r\n    text-align: left;\r\n}\r\n\r\ninput,\r\ntextarea {\r\n    display: block;\r\n    margin: 10px 0;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    padding: 10px;\r\n    border: 1px solid #eee;\r\n}\r\n\r\ntextarea {\r\n    height: 160px;\r\n}\r\n\r\nlabel {\r\n    display: inline-block;\r\n    margin-top: 30px;\r\n    position: relative;\r\n    font-size: 20px;\r\n    color: white;\r\n    margin-bottom: 10px;\r\n}\r\n\r\nlabel::before {\r\n    content: \"\";\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #ff8800;\r\n    position: absolute;\r\n    z-index: -1;\r\n    padding-right: 40px;\r\n    left: -30px;\r\n    transform: rotateZ(-1.5deg);\r\n}\r\n\r\nbutton {\r\n    display: block;\r\n    margin-top: 30px;\r\n    background: #ff8800;\r\n    color: white;\r\n    border: none;\r\n    padding: 8px 16px;\r\n    font-size: 18px\r\n}\r\n\r\n.pill {\r\n    display: inline-block;\r\n    margin: 10px 10px 0 0;\r\n    color: #444;\r\n    background: #ddd;\r\n    padding: 8px;\r\n    border-radius: 20px;\r\n    font-size: 14px;\r\n}\r\n</style>"]}]}